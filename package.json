{
  "name": "vscode-lizard",
  "displayName": "VS Code Lizard",
  "description": "Run complexity analysis on your code.",
  "version": "1.0.1",
  "publisher": "brobeson",
  "author": {
    "name": "brobeson",
    "url": "https://brobeson.github.io"
  },
  "homepage": "https://brobeson.github.io/vscode-lizard",
  "icon": "logo.png",
  "bugs": {
    "url": "https://github.com/brobeson/vscode-lizard/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/brobeson/vscode-lizard.git"
  },
  "engines": {
    "vscode": "^1.70.0"
  },
  "license": "MIT",
  "categories": [
    "Linters"
  ],
  "keywords": [
    "lizard",
    "complexity",
    "ccn"
  ],
  "activationEvents": [
    "onLanguage:cpp"
  ],
  "main": "./out/lizard.js",
  "extensionKind": [
    "workspace"
  ],
  "contributes": {
    "commands": [
      {
        "command": "lizard.scanActiveFile",
        "title": "Scan the Current File",
        "category": "Lizard"
      }
    ],
    "configuration": {
      "title": "lizard",
      "properties": {
        "lizard.ccn": {
          "type": "number",
          "description": "The maximum cyclomatic complexity value for a function.",
          "minimum": 1
        },
        "lizard.functionLength": {
          "type": "number",
          "description": "The maximum length of a function.",
          "minimum": 1
        },
        "lizard.parameterCount": {
          "type": "number",
          "description": "The maximum number of parameters a function can have.",
          "minimum": 0
        },
        "lizard.useModifiedCcn": {
          "type": "boolean",
          "default": false,
          "description": "Use modified CCN complexity analysis. This treats switch statements as having CCN 1 regardless of the number of cases."
        },
        "lizard.whitelist": {
          "type": "string",
          "description": "The path to a white list file."
        },
        "lizard.extensions": {
          "type": "array",
          "description": "A list of Lizard extensions to include on the command line. See the Lizard documentation for information about available extensions."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "clean": "rm -r out/*",
    "format": "prettier --write ./"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "^24.x",
    "@types/vscode": "^1.103.0",
    "@typescript-eslint/eslint-plugin": "^8.41.0",
    "@typescript-eslint/parser": "^8.41.0",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^8.20.0",
    "glob": "^11.0.3",
    "mocha": "^11.7.1",
    "prettier": "3.6.2",
    "typescript": "^4.7.4"
  },
  "prettier": {
    "proseWrap": "always"
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": 6,
      "project": [
        "tsconfig.json"
      ],
      "sourceType": "module"
    },
    "extends": [
      "eslint:all",
      "plugin:@typescript-eslint/recommended",
      "plugin:@typescript-eslint/recommended-requiring-type-checking",
      "plugin:@typescript-eslint/strict"
    ],
    "plugins": [
      "@typescript-eslint"
    ],
    "env": {
      "es6": true,
      "mocha": true,
      "node": true
    },
    "rules": {
      "@typescript-eslint/no-shadow": "error",
      "array-element-newline": [
        "error",
        "consistent"
      ],
      "capitalized-comments": [
        "error",
        "always",
        {
          "ignoreConsecutiveComments": true
        }
      ],
      "comma-dangle": [
        "error",
        "always-multiline"
      ],
      "dot-location": [
        "error",
        "property"
      ],
      "func-style": [
        "error",
        "declaration"
      ],
      "function-call-argument-newline": "off",
      "function-paren-newline": "off",
      "id-length": "off",
      "indent": "off",
      "max-len": [
        "error",
        {
          "code": 200,
          "comments": 80
        }
      ],
      "max-params": [
        "error",
        5
      ],
      "max-statements": [
        "error",
        15
      ],
      "multiline-comment-style": "off",
      "no-console": "off",
      "no-magic-numbers": [
        "error",
        {
          "ignore": [
            0,
            1
          ],
          "ignoreArrayIndexes": true
        }
      ],
      "no-multi-spaces": [
        "error",
        {
          "ignoreEOLComments": true
        }
      ],
      "no-shadow": "off",
      "no-ternary": "off",
      "no-warning-comments": "off",
      "object-curly-spacing": "off",
      "object-property-newline": [
        "error",
        {
          "allowAllPropertiesOnSameLine": true
        }
      ],
      "one-var": "off",
      "padded-blocks": [
        "error",
        "never"
      ],
      "quote-props": [
        "error",
        "as-needed"
      ],
      "quotes": "off",
      "radix": "off",
      "sort-imports": "off",
      "sort-keys": [
        "error",
        "asc",
        {
          "natural": true
        }
      ],
      "space-before-function-paren": "off"
    }
  }
}
